global
    log 127.0.0.1 local0 debug
    log 127.0.0.1 local1 notice
    maxconn 81920
    resolvers docker
    nameserver dns "127.0.0.11:53"

defaults
    balance     source
    log     global
    mode    http
    option  dontlognull
    timeout connect 10s
    timeout client  180s
    timeout server  180s
    log stdout format raw daemon debug

#frontend http-in
#   bind *:${__HAPROXY_HTTP__}
#   http-request replace-header Host ^(.*?)(:[0-9]+)?$ \1:${__HAPROXY_HTTPS__}
#   redirect scheme https code 301 if !{ ssl_fc }

frontend https-in
    bind *:${__HAPROXY_HTTP__}
    mode    http
    http-request add-header X-Forwarded-For %[src]
    ### Define hosts
    ### ---------------------------
    # for web
    acl web_domain hdr(host) -i ${WEB_SERVER_NAME}${__OPEN_WEB_PORT__}
    acl web_domain hdr(host) -i ${API_SERVER_NAME}${__OPEN_WEB_PORT__}
    acl web_domain hdr(host) -i ${STATIC_SERVER_NAME}${__OPEN_WEB_PORT__}
    acl web_domain hdr(host) -i ${SOCKET_SERVER_NAME}${__OPEN_WEB_PORT__}
    acl web_domain hdr(host) -i ${JUPYTER_SERVER_NAME}${__OPEN_WEB_PORT__}
    acl web_domain hdr(host) -i ${SCIENCE_SERVER_NAME}${__OPEN_WEB_PORT__}

    # for web
    use_backend web_cluster if web_domain

frontend mysql-in
    bind *:3306
    mode tcp
    use_backend mysql_cluster

frontend mongodb-in
    bind *:27017
    mode tcp
    use_backend mongodb_cluster

backend mysql_cluster
    mode tcp
    option mysql-check user haproxy
    server mysql-${THIS_NAME} mysql:3306 check backup

    server mysql-${OTHER_NAME} ${ACTIVE_IP}:13306 check

    #server mysql-${OTHER_NAME} ${STANDBY_IP}:13306 check backup

backend mongodb_cluster
    mode tcp
    option tcp-check
    # MongoDB Wire Protocol
    tcp-check send-binary 3a000000 # Message Length (58)
    tcp-check send-binary EEEEEEEE # Request ID (random value)
    tcp-check send-binary 00000000 # Response To (nothing)
    tcp-check send-binary d4070000 # OpCode (Query)
    tcp-check send-binary 00000000 # Query Flags
    tcp-check send-binary 61646d696e2e # fullCollectionName (admin.$cmd)
    tcp-check send-binary 24636d6400 # continued
    tcp-check send-binary 00000000 # NumToSkip
    tcp-check send-binary FFFFFFFF # NumToReturn
    # Start of Document
    tcp-check send-binary 13000000 # Document Length (19)
    tcp-check send-binary 10 # Type (Int32)
    tcp-check send-binary 69736d617374657200 # ismaster:
    tcp-check send-binary 01000000 # Value : 1
    tcp-check send-binary 00 # Term

    tcp-check expect binary 69736d61737465720001 #ismaster True

    server mongodb-${THIS_NAME}-master mongodb:27017 check

    server mongodb-${OTHER_NAME}-master ${ACTIVE_IP}:27012 check backup

    #server mongodb-${OTHER_NAME}-master ${STANDBY_IP}:27012 check backup

backend web_cluster
    mode http
    option forwardfor
    balance            source
    acl exists-host-header req.hdr(host) -m found
    http-request set-header Host localhost unless exists-host-header
    server nginx-${THIS_NAME} nginx:80 check

    server haproxy-${OTHER_NAME} ${ACTIVE_IP}:80 check backup

    #server haproxy-${OTHER_NAME} ${STANDBY_IP}:80 check

listen php-fpm-status
    bind *:9000
    mode tcp
    option tcp-check

    server php-fpm-${THIS_NAME} php-fpm:9000 check

listen mysql-status
    bind *:3306
    mode tcp
    option tcp-check

    server mysql-${THIS_NAME}-master mysql:3306 check

    server mysql-${OTHER_NAME}-master ${ACTIVE_IP}:23306 check

    #server mysql-${OTHER_NAME}-master ${STANDBY_IP}:23306 check

listen mongodb-status
    bind *:27017
    mode tcp
    option tcp-check

    server mongo-${THIS_NAME}-master mongodb:27017 check

    server mongo-${OTHER_NAME}-master ${ACTIVE_IP}:27012 check

    #server mongo-${OTHER_NAME}-master ${STANDBY_IP}:27012 check

    server mongo-arbiter ${MONGO_ARBITER_IP}:47013 check

listen stats
    bind *:1936
    mode http
    stats enable
    stats uri /stats
    stats auth haproxy:haproxy12!@
    stats refresh 5s

